# summarize_report

{{< include ../validation-rules/_setup.qmd >}}

```{python}
#| echo: false
ASSET_DIR = '../../assets/specs/summarize_report'

from rich.pretty import pprint
```

This document provides the specifications for programmatically summarizing a
validation report generated with the `validation.validate_data` function within the `PHES-ODM-Validaion` Python package.

Summarizing the validation report is desireable when multiple rows in the input
data has the same kind of errors, which causes the primary report to overflow
with repeating messages. When passing the report through summarization, it will
only show how many rules of which type were broken, and in which table/column
they originated.

## Import schema

```{python}
from odm_validation.utils import import_schema

schema = import_schema(asset('schema.yml'))
pprint(schema, expand_all=True)
```

## Validate data

```{python}
from odm_validation.utils import import_dataset

data = import_dataset(asset('data.yml'))
pprint(data)
```

```{python}
from odm_validation.validation import validate_data

report = validate_data(schema, data)
pprint(report.errors)
pprint(report.warnings)
```

As you can see from the report above, the amount of information is overwhelming
due to the amount of rows in the input with similar errors.

## Summarize data

```python
from odm_validation.validation import summarize_report

summary = summarize_report(report)
assert summary.errors == {
    'addresses': {
        'invalid_type': 3,
    }
}
assert summary.warnings == {
    'addresses': {
        '_coercion': 3,
    }
}
pprint(summary.to_markdown)
```

<!-- TODO: replace with computed output-->
```markdown
# summary

## errors

### addresses

3 errors

- invalid_type: 3

## warnings

### addresses

3 warnings

- _coercion: 3
```
